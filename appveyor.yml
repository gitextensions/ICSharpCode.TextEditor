version: 4.0.2.{build}

branches:
  except:
    - /experimental\/*/

matrix:
  fast_finish: true

# https://www.appveyor.com/docs/build-environment/#build-worker-images
image: Visual Studio 2019

# Build settings, not to be confused with "before_build" and "after_build".
# "project" is relative to the original build directory and not influenced by directory changes in "before_build".
build:
  # enable MSBuild parallel builds
  parallel: true
  # MSBuild verbosity level
  verbosity: minimal

# to run your custom scripts instead of automatic MSBuild
build_script:
- ps: |
    # build .NET
    dotnet build -c Release --verbosity q --nologo /bl:.\build.binlog
    if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }

# to run your custom scripts instead of automatic tests
test_script:
- ps: |
    dotnet test -c Release --no-restore --nologo --verbosity q --test-adapter-path:. --logger:Appveyor --logger:trx /bl:.\tests.binlog
    if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }

# on build failure
on_failure:
- ps: |
    Get-ChildItem -recurse *.binlog -ErrorAction SilentlyContinue `
    | ForEach-Object {
        Push-AppveyorArtifact "$_"
    }
- ps: |
    Get-ChildItem -recurse Test\TestsResults\*.trx | `
        ForEach-Object {
            $file = $_.FullName.Replace('[', '``[').Replace(']', '``]')
            #Write-Output "Processing $file"

            [xml]$xml = Get-Content -Path $file
            $xml.TestRun.Results.UnitTestResult | Where-Object outcome -eq 'Failed' | ForEach-Object {
                $errorMessage = "$($_.Output.ErrorInfo.Message)`r`n$($_.Output.ErrorInfo.StackTrace)`r`n"
                Write-Host $errorMessage -ForegroundColor Red
            }
        }
